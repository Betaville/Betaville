/* Copyright (c) 2008-2012, Brooklyn eXperimental Media Center
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Brooklyn eXperimental Media Center nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Brooklyn eXperimental Media Center BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package net.betaville.usercontrol;

import com.jme3.math.Vector3f;
import edu.poly.bxmc.betaville.CentralLookup;
import edu.poly.bxmc.betaville.jme.map.GPSCoordinate;
import edu.poly.bxmc.betaville.jme.map.ILocation;
import edu.poly.bxmc.betaville.jme.map.UTMCoordinate;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//net.betaville.usercontrol//CurrentLocation//EN",
autostore = false)
@TopComponent.Description(preferredID = "CurrentLocationTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = true)
@ActionID(category = "Window", id = "net.betaville.usercontrol.CurrentLocationTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_CurrentLocationAction",
preferredID = "CurrentLocationTopComponent")
@Messages({
    "CTL_CurrentLocationAction=CurrentLocation",
    "CTL_CurrentLocationTopComponent=CurrentLocation Window",
    "HINT_CurrentLocationTopComponent=This is a CurrentLocation window"
})
public final class CurrentLocationTopComponent extends TopComponent implements LookupListener {

    private Lookup.Result<ILocation> locationResult;
    private Lookup.Result<Vector3f> vector3fResult;

    public CurrentLocationTopComponent() {
        initComponents();
        
        setName(Bundle.CTL_CurrentLocationTopComponent());
        setToolTipText(Bundle.HINT_CurrentLocationTopComponent());
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PERSISTENCE_ALWAYS, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_SLIDING_DISABLED, Boolean.TRUE);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        utmPane = new javax.swing.JPanel();
        northingValueData = new javax.swing.JTextField();
        longitudeValueLabel1 = new javax.swing.JLabel();
        utmAltitudeValueData = new javax.swing.JTextField();
        wgsAltitudeValueLabel1 = new javax.swing.JLabel();
        northingValueLabel = new javax.swing.JLabel();
        eastingValueData = new javax.swing.JTextField();
        glPane = new javax.swing.JPanel();
        xValueLabel = new javax.swing.JLabel();
        xValueData = new javax.swing.JTextField();
        yValueLabel = new javax.swing.JLabel();
        yValueData = new javax.swing.JTextField();
        zValueLabel = new javax.swing.JLabel();
        zValueData = new javax.swing.JTextField();
        latLonPane = new javax.swing.JPanel();
        latitudeValueLabel = new javax.swing.JLabel();
        latitudeValueData = new javax.swing.JTextField();
        longitudeValueLabel = new javax.swing.JLabel();
        longitudeValueData = new javax.swing.JTextField();
        wgsAltitudeValueLabel = new javax.swing.JLabel();
        wgsAltitudeValueData = new javax.swing.JTextField();

        tabbedPane.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        tabbedPane.setPreferredSize(new java.awt.Dimension(243, 104));

        northingValueData.setEditable(false);
        northingValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueData.text")); // NOI18N
        northingValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(longitudeValueLabel1, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueLabel1.text")); // NOI18N

        utmAltitudeValueData.setEditable(false);
        utmAltitudeValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueData.text")); // NOI18N
        utmAltitudeValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(wgsAltitudeValueLabel1, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.wgsAltitudeValueLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(northingValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueLabel.text")); // NOI18N

        eastingValueData.setEditable(false);
        eastingValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueData.text")); // NOI18N
        eastingValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout utmPaneLayout = new javax.swing.GroupLayout(utmPane);
        utmPane.setLayout(utmPaneLayout);
        utmPaneLayout.setHorizontalGroup(
            utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(northingValueData)
            .addComponent(eastingValueData)
            .addComponent(utmAltitudeValueData)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, utmPaneLayout.createSequentialGroup()
                .addGap(0, 78, Short.MAX_VALUE)
                .addGroup(utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(northingValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(longitudeValueLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wgsAltitudeValueLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        utmPaneLayout.setVerticalGroup(
            utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utmPaneLayout.createSequentialGroup()
                .addComponent(northingValueLabel)
                .addGap(0, 0, 0)
                .addComponent(northingValueData, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longitudeValueLabel1)
                .addGap(0, 0, 0)
                .addComponent(eastingValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wgsAltitudeValueLabel1)
                .addGap(0, 0, 0)
                .addComponent(utmAltitudeValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.utmPane.TabConstraints.tabTitle"), utmPane); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(xValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueLabel.text")); // NOI18N

        xValueData.setEditable(false);
        xValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueData.text")); // NOI18N
        xValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        xValueData.setPreferredSize(new java.awt.Dimension(54, 15));

        org.openide.awt.Mnemonics.setLocalizedText(yValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.yValueLabel.text")); // NOI18N

        yValueData.setEditable(false);
        yValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueData.text")); // NOI18N
        yValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        yValueData.setPreferredSize(new java.awt.Dimension(54, 15));

        org.openide.awt.Mnemonics.setLocalizedText(zValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.zValueLabel.text")); // NOI18N

        zValueData.setEditable(false);
        zValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueData.text")); // NOI18N
        zValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        zValueData.setPreferredSize(new java.awt.Dimension(54, 15));

        javax.swing.GroupLayout glPaneLayout = new javax.swing.GroupLayout(glPane);
        glPane.setLayout(glPaneLayout);
        glPaneLayout.setHorizontalGroup(
            glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(glPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(yValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(zValueLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(xValueData, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
            .addComponent(yValueData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(zValueData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        glPaneLayout.setVerticalGroup(
            glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(glPaneLayout.createSequentialGroup()
                .addComponent(xValueLabel)
                .addGap(0, 0, 0)
                .addComponent(xValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yValueLabel)
                .addGap(0, 0, 0)
                .addComponent(yValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zValueLabel)
                .addGap(0, 0, 0)
                .addComponent(zValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.glPane.TabConstraints.tabTitle"), glPane); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(latitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.latitudeValueLabel.text")); // NOI18N

        latitudeValueData.setEditable(false);
        latitudeValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueData.text")); // NOI18N
        latitudeValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(longitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueLabel.text")); // NOI18N

        longitudeValueData.setEditable(false);
        longitudeValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueData.text")); // NOI18N
        longitudeValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(wgsAltitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.wgsAltitudeValueLabel.text")); // NOI18N

        wgsAltitudeValueData.setEditable(false);
        wgsAltitudeValueData.setText(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueData.text")); // NOI18N
        wgsAltitudeValueData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout latLonPaneLayout = new javax.swing.GroupLayout(latLonPane);
        latLonPane.setLayout(latLonPaneLayout);
        latLonPaneLayout.setHorizontalGroup(
            latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(latitudeValueData, javax.swing.GroupLayout.Alignment.CENTER)
            .addComponent(longitudeValueData, javax.swing.GroupLayout.Alignment.CENTER)
            .addComponent(wgsAltitudeValueData, javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, latLonPaneLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(latitudeValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(longitudeValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wgsAltitudeValueLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        latLonPaneLayout.setVerticalGroup(
            latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(latLonPaneLayout.createSequentialGroup()
                .addComponent(latitudeValueLabel)
                .addGap(0, 0, 0)
                .addComponent(latitudeValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longitudeValueLabel)
                .addGap(0, 0, 0)
                .addComponent(longitudeValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wgsAltitudeValueLabel)
                .addGap(0, 0, 0)
                .addComponent(wgsAltitudeValueData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.latLonPane.TabConstraints.tabTitle"), latLonPane); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField eastingValueData;
    private javax.swing.JPanel glPane;
    private javax.swing.JPanel latLonPane;
    private javax.swing.JTextField latitudeValueData;
    private javax.swing.JLabel latitudeValueLabel;
    private javax.swing.JTextField longitudeValueData;
    private javax.swing.JLabel longitudeValueLabel;
    private javax.swing.JLabel longitudeValueLabel1;
    private javax.swing.JTextField northingValueData;
    private javax.swing.JLabel northingValueLabel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField utmAltitudeValueData;
    private javax.swing.JPanel utmPane;
    private javax.swing.JTextField wgsAltitudeValueData;
    private javax.swing.JLabel wgsAltitudeValueLabel;
    private javax.swing.JLabel wgsAltitudeValueLabel1;
    private javax.swing.JTextField xValueData;
    private javax.swing.JLabel xValueLabel;
    private javax.swing.JTextField yValueData;
    private javax.swing.JLabel yValueLabel;
    private javax.swing.JTextField zValueData;
    private javax.swing.JLabel zValueLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        locationResult = CentralLookup.getDefault().lookupResult(ILocation.class);
        vector3fResult = CentralLookup.getDefault().lookupResult(Vector3f.class);
        locationResult.addLookupListener(this);
        vector3fResult.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        locationResult.removeLookupListener(this);
        vector3fResult.removeLookupListener(this);
        locationResult = null;
        vector3fResult = null;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        ILocation location = CentralLookup.getDefault().lookup(ILocation.class);
        if (location != null) {

            if (tabbedPane.getSelectedComponent() == glPane) {
                Vector3f glLocation = vector3fResult.allInstances().iterator().next();
                xValueData.setText("" + glLocation.getX());
                yValueData.setText("" + glLocation.getY());
                zValueData.setText("" + glLocation.getZ());
            } else if (tabbedPane.getSelectedComponent() == utmPane) {
                UTMCoordinate utm = location.getUTM();
                eastingValueData.setText(utm.getEasting() + "." + utm.getEastingCentimeters());
                northingValueData.setText(utm.getNorthing() + "." + utm.getNorthingCentimeters());
                utmAltitudeValueData.setText("" + utm.getAltitude());
            } else if (tabbedPane.getSelectedComponent() == latLonPane) {
                GPSCoordinate gps = location.getGPS();
                latitudeValueData.setText("" + gps.getLatitude());
                longitudeValueData.setText("" + gps.getLongitude());
                wgsAltitudeValueData.setText("" + gps.getAltitude());
            }
        }


    }
}
