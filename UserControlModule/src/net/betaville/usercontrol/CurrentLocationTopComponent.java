/* Copyright (c) 2008-2012, Brooklyn eXperimental Media Center
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Brooklyn eXperimental Media Center nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Brooklyn eXperimental Media Center BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package net.betaville.usercontrol;

import com.jme3.math.Vector3f;
import edu.poly.bxmc.betaville.CentralLookup;
import edu.poly.bxmc.betaville.jme.map.GPSCoordinate;
import edu.poly.bxmc.betaville.jme.map.ILocation;
import edu.poly.bxmc.betaville.jme.map.UTMCoordinate;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//net.betaville.usercontrol//CurrentLocation//EN",
autostore = false)
@TopComponent.Description(preferredID = "CurrentLocationTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = true)
@ActionID(category = "Window", id = "net.betaville.usercontrol.CurrentLocationTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_CurrentLocationAction",
preferredID = "CurrentLocationTopComponent")
@Messages({
    "CTL_CurrentLocationAction=CurrentLocation",
    "CTL_CurrentLocationTopComponent=CurrentLocation Window",
    "HINT_CurrentLocationTopComponent=This is a CurrentLocation window"
})
public final class CurrentLocationTopComponent extends TopComponent implements LookupListener {

    private Lookup.Result<ILocation> locationResult;
    private Lookup.Result<Vector3f> vector3fResult;

    public CurrentLocationTopComponent() {
        initComponents();
        setName(Bundle.CTL_CurrentLocationTopComponent());
        setToolTipText(Bundle.HINT_CurrentLocationTopComponent());
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        latLonPane = new javax.swing.JPanel();
        latitudeValueLabel = new javax.swing.JLabel();
        longitudeValueLabel = new javax.swing.JLabel();
        latitudeValueData = new javax.swing.JLabel();
        longitudeValueData = new javax.swing.JLabel();
        wgsAltitudeValueLabel = new javax.swing.JLabel();
        wgsAltitudeValueData = new javax.swing.JLabel();
        utmPane = new javax.swing.JPanel();
        northingValueLabel = new javax.swing.JLabel();
        eastingValueLabel = new javax.swing.JLabel();
        utmAltitudeValueLabel = new javax.swing.JLabel();
        utmAltitudeValueData = new javax.swing.JLabel();
        eastingValueData = new javax.swing.JLabel();
        northingValueData = new javax.swing.JLabel();
        glPane = new javax.swing.JPanel();
        xValueLabel = new javax.swing.JLabel();
        yValueLabel = new javax.swing.JLabel();
        zValueLabel = new javax.swing.JLabel();
        zValueData = new javax.swing.JLabel();
        yValueData = new javax.swing.JLabel();
        xValueData = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(latitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.latitudeValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(longitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(latitudeValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.latitudeValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(longitudeValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.longitudeValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(wgsAltitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.wgsAltitudeValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(wgsAltitudeValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.wgsAltitudeValueData.text")); // NOI18N

        javax.swing.GroupLayout latLonPaneLayout = new javax.swing.GroupLayout(latLonPane);
        latLonPane.setLayout(latLonPaneLayout);
        latLonPaneLayout.setHorizontalGroup(
            latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(latLonPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(latLonPaneLayout.createSequentialGroup()
                        .addComponent(latitudeValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(latitudeValueData))
                    .addGroup(latLonPaneLayout.createSequentialGroup()
                        .addComponent(longitudeValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                        .addComponent(longitudeValueData))
                    .addGroup(latLonPaneLayout.createSequentialGroup()
                        .addComponent(wgsAltitudeValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(wgsAltitudeValueData)))
                .addContainerGap())
        );
        latLonPaneLayout.setVerticalGroup(
            latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(latLonPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latitudeValueLabel)
                    .addComponent(latitudeValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longitudeValueLabel)
                    .addComponent(longitudeValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(latLonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wgsAltitudeValueLabel)
                    .addComponent(wgsAltitudeValueData))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.latLonPane.TabConstraints.tabTitle"), latLonPane); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(northingValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(eastingValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.eastingValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(utmAltitudeValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.utmAltitudeValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(utmAltitudeValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.utmAltitudeValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(eastingValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.eastingValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(northingValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.northingValueData.text")); // NOI18N

        javax.swing.GroupLayout utmPaneLayout = new javax.swing.GroupLayout(utmPane);
        utmPane.setLayout(utmPaneLayout);
        utmPaneLayout.setHorizontalGroup(
            utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utmPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(utmPaneLayout.createSequentialGroup()
                        .addComponent(northingValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(northingValueData))
                    .addGroup(utmPaneLayout.createSequentialGroup()
                        .addComponent(eastingValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                        .addComponent(eastingValueData))
                    .addGroup(utmPaneLayout.createSequentialGroup()
                        .addComponent(utmAltitudeValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(utmAltitudeValueData)))
                .addContainerGap())
        );
        utmPaneLayout.setVerticalGroup(
            utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utmPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(northingValueLabel)
                    .addComponent(northingValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eastingValueLabel)
                    .addComponent(eastingValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(utmPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(utmAltitudeValueLabel)
                    .addComponent(utmAltitudeValueData))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.utmPane.TabConstraints.tabTitle"), utmPane); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(xValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(yValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.yValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(zValueLabel, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.zValueLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(zValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.zValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(yValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.yValueData.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(xValueData, org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.xValueData.text")); // NOI18N

        javax.swing.GroupLayout glPaneLayout = new javax.swing.GroupLayout(glPane);
        glPane.setLayout(glPaneLayout);
        glPaneLayout.setHorizontalGroup(
            glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(glPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(glPaneLayout.createSequentialGroup()
                        .addComponent(xValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(xValueData))
                    .addGroup(glPaneLayout.createSequentialGroup()
                        .addComponent(yValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                        .addComponent(yValueData))
                    .addGroup(glPaneLayout.createSequentialGroup()
                        .addComponent(zValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(zValueData)))
                .addContainerGap())
        );
        glPaneLayout.setVerticalGroup(
            glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(glPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xValueLabel)
                    .addComponent(xValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yValueLabel)
                    .addComponent(yValueData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(glPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zValueLabel)
                    .addComponent(zValueData))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        tabbedPane.addTab(org.openide.util.NbBundle.getMessage(CurrentLocationTopComponent.class, "CurrentLocationTopComponent.glPane.TabConstraints.tabTitle"), glPane); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel eastingValueData;
    private javax.swing.JLabel eastingValueLabel;
    private javax.swing.JPanel glPane;
    private javax.swing.JPanel latLonPane;
    private javax.swing.JLabel latitudeValueData;
    private javax.swing.JLabel latitudeValueLabel;
    private javax.swing.JLabel longitudeValueData;
    private javax.swing.JLabel longitudeValueLabel;
    private javax.swing.JLabel northingValueData;
    private javax.swing.JLabel northingValueLabel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel utmAltitudeValueData;
    private javax.swing.JLabel utmAltitudeValueLabel;
    private javax.swing.JPanel utmPane;
    private javax.swing.JLabel wgsAltitudeValueData;
    private javax.swing.JLabel wgsAltitudeValueLabel;
    private javax.swing.JLabel xValueData;
    private javax.swing.JLabel xValueLabel;
    private javax.swing.JLabel yValueData;
    private javax.swing.JLabel yValueLabel;
    private javax.swing.JLabel zValueData;
    private javax.swing.JLabel zValueLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        locationResult = CentralLookup.getDefault().lookupResult(ILocation.class);
        vector3fResult = CentralLookup.getDefault().lookupResult(Vector3f.class);
        locationResult.addLookupListener(this);
        vector3fResult.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        locationResult.removeLookupListener(this);
        vector3fResult.removeLookupListener(this);
        locationResult = null;
        vector3fResult = null;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        ILocation location = CentralLookup.getDefault().lookup(ILocation.class);
        if (location != null) {

            if (tabbedPane.getSelectedComponent() == glPane) {
                Vector3f glLocation = vector3fResult.allInstances().iterator().next();
                xValueData.setText("" + glLocation.getX());
                yValueData.setText("" + glLocation.getY());
                zValueData.setText("" + glLocation.getZ());
            } else if (tabbedPane.getSelectedComponent() == utmPane) {
                UTMCoordinate utm = location.getUTM();
                eastingValueData.setText(utm.getEasting() + "." + utm.getEastingCentimeters());
                northingValueData.setText(utm.getNorthing() + "." + utm.getNorthingCentimeters());
                utmAltitudeValueData.setText("" + utm.getAltitude());
            } else if (tabbedPane.getSelectedComponent() == latLonPane) {
                GPSCoordinate gps = location.getGPS();
                latitudeValueData.setText("" + gps.getLatitude());
                longitudeValueData.setText("" + gps.getLongitude());
                wgsAltitudeValueData.setText("" + gps.getAltitude());
            }
        }


    }
}
